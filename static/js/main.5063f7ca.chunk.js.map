{"version":3,"sources":["PathfindingVisualizer/Node/Node.jsx","PathfindingVisualizer/Algorithms/dijkstra.js","PathfindingVisualizer/PathfindingVisualizer.jsx","HomeScreen/HomeScreen.jsx","NavBar/NavBar.jsx","BSort/BSort.jsx","BreadthFirstSearch/BreadthFirstSearch.jsx","QSort/QSort.jsx","BFSExtra/BFSExtra.jsx","App.js","serviceWorker.js","index.js"],"names":["Node","this","props","col","isFinish","isStart","isWall","onMouseDown","onMouseEnter","onMouseUp","row","extraClassName","id","className","Component","dijkstra","grid","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","node","push","getAllNodes","length","sortNodesByDistance","closestNode","shift","Infinity","isVisited","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","PathfindingVisualizer","state","mouseIsPressed","getInitialGrid","setState","newGrid","getNewGridWithWallToggled","nodesInShortestPathOrder","i","setTimeout","animateShortestPath","document","getElementById","currentNode","unshift","getNodesInShortestPathOrder","animateDijkstra","window","location","reload","Button","style","marginRight","onClick","clearPath","color","visualizeDijkstra","resetSketch","map","rowIdx","key","nodeIdx","handleMouseDown","handleMouseEnter","handleMouseUp","currentRow","createNode","slice","newNode","HomeScreen","class","href","NavBar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","BSort","p","values","states","slow","slower","normal","half_speed","quarter_speed","normal_speed","quickSort","arr","start","end","a","partition","index","Promise","all","pivotValue","pivotIndex","swap","b","sleep","temp","ms","resolve","setup","createCanvas","Array","floor","width","random","height","button","createButton","mousePressed","parent","slowerBtn","slowBtn","normalBtn","draw","background","noStroke","fill","rect","myCustomRedrawAccordingToNewPropsHandler","newProps","canvas","sketch","DUMMY_OBSTACLES","BreadthFirstSearch","handleMouseMove","bind","handleClick","handleExpandClick","hexSize","hexOrigin","x","y","currentHex","q","r","s","playerPosition","obstacles","frontier","cameFrom","hexParametres","getHexParametres","canvasSize","canvasWidth","canvasHeight","canvasHex","canvasInteraction","canvasView","getCanvasPosition","drawHex","Point","drawHexes","nextProps","nextState","getContext","clearRect","currentDistanceLine","l","JSON","parse","hexToPixel","Hex","ctx","hexWidth","hexHeight","vertDist","horizDist","qLeftSide","Math","round","qRightSide","rTopSide","rBottomSide","n","canvasID","center","lineWidth","lineColor","fillColor","getHexCornerCoord","fillHex","drawLine","angle_deg","angle_rad","PI","cos","sin","beginPath","moveTo","strokeStyle","lineTo","stroke","closePath","c0","c1","c2","c3","c4","c5","fillStyle","globalAlpha","h","fillText","sqrt","size","origin","hexA","hexB","dist","cubeDistance","cubeRound","cubeLinearInt","concat","direction","t","linearInt","cubeAdd","cubeDirection","getCubeNeighbor","cube","rx","ry","rz","x_diff","abs","y_diff","z_diff","cubeSubstract","getBoundingClientRect","canvasPosition","left","right","top","bottom","e","offsetX","pageX","offsetY","pageY","pageYOffset","pixelToHex","getDistanceLine","addObstacles","includes","stringify","console","log","current","getNeighbors","hasOwnProperty","Object","assign","ref","canvasCoordinates","onMouseMove","textAlign","QSort","j","noLoop","line","BFSExtra","hexPathMap","path","drawObstacles","drawPath","from","fromCoord","drawArrow","fromx","fromy","tox","toy","angle","atan2","bottomH","topH","breadthFirstSearchCallback","breadthFirstSearch","getPath","undefined","React","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5063f7ca.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Node.css\";\r\n\r\nexport default class Node extends Component {\r\n  render() {\r\n    const {\r\n      col,\r\n      isFinish,\r\n      isStart,\r\n      isWall,\r\n      onMouseDown,\r\n      onMouseEnter,\r\n      onMouseUp,\r\n      row\r\n    } = this.props;\r\n    const extraClassName = isFinish\r\n      ? \"node-finish\"\r\n      : isStart\r\n      ? \"node-start\"\r\n      : isWall\r\n      ? \"node-wall\"\r\n      : \"\";\r\n\r\n    return (\r\n      <div\r\n        id={`node-${row}-${col}`}\r\n        className={`node ${extraClassName}`}\r\n        onMouseDown={() => onMouseDown(row, col)}\r\n        onMouseEnter={() => onMouseEnter(row, col)}\r\n        onMouseUp={() => onMouseUp()}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n","// Performs Dijkstra's algorithm; returns *all* nodes in the order\r\n// in which they were visited. Also makes nodes point back to their\r\n// previous node, effectively allowing us to compute the shortest path\r\n// by backtracking from the finish node.\r\nexport function dijkstra(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid);\r\n  while (!!unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (closestNode.isWall) continue;\r\n    // If the closest node is at a distance of infinity,\r\n    // we must be trapped and should therefore stop.\r\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n    if (closestNode === finishNode) return visitedNodesInOrder;\r\n    updateUnvisitedNeighbors(closestNode, grid);\r\n  }\r\n}\r\n\r\nfunction sortNodesByDistance(unvisitedNodes) {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const { col, row } = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter(neighbor => !neighbor.isVisited);\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called *after* the dijkstra method above.\r\nexport function getNodesInShortestPathOrder(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Node from \"./Node/Node\";\r\nimport { dijkstra, getNodesInShortestPathOrder } from \"./Algorithms/dijkstra\";\r\nimport {\r\n  Container,\r\n  Divider,\r\n  Dropdown,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Button,\r\n  Segment\r\n} from \"semantic-ui-react\";\r\n\r\n\r\n\r\nconst START_NODE_ROW = 10;\r\nconst START_NODE_COL = 10;\r\nconst FINISH_NODE_ROW = 10;\r\nconst FINISH_NODE_COL = 40;\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      grid: [],\r\n      mouseIsPressed: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const grid = getInitialGrid();\r\n    this.setState({ grid });\r\n  }\r\n\r\n  handleMouseDown(row, col) {\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({ grid: newGrid, mouseIsPressed: true });\r\n  }\r\n\r\n  handleMouseEnter(row, col) {\r\n    if (!this.state.mouseIsPressed) return;\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({ grid: newGrid });\r\n  }\r\n\r\n  handleMouseUp() {\r\n    this.setState({ mouseIsPressed: false });\r\n  }\r\n\r\n  animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          this.animateShortestPath(nodesInShortestPathOrder);\r\n        }, 10 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          \"node node-visited\";\r\n      }, 10 * i);\r\n    }\r\n  }\r\n\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n      setTimeout(() => {\r\n        const node = nodesInShortestPathOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          \"node node-shortest-path\";\r\n      }, 50 * i);\r\n    }\r\n  }\r\n\r\n  visualizeDijkstra() {\r\n    const { grid } = this.state;\r\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\r\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    const visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n    this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n  }\r\n\r\n  clearPath() {\r\n    this.setState({ grid: [] });\r\n    const grid = getInitialGrid();\r\n    this.setState({ grid });\r\n  }\r\n\r\n  resetSketch() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    const { grid, mouseIsPressed } = this.state;\r\n\r\n    return (\r\n      <section id=\"dijkstraSec\">\r\n\r\n        <div id=\"dijkstraTitle\">\r\n  Dijkstra's Algorithm\r\n</div> <b></b>\r\n\r\n<div className=\"dijkstraDescription\">\r\n<b id=\"bold\">How to use: </b>Create walls by clicking and dragging over the grid.<br></br> Hit visualize\r\n  to see Dijkstra's Algorithm select the shortest path! <br></br>\r\n<b id=\"bold\">How it works: </b> The <b>start</b> node and <b>end</b> node are marked on left and right respectively.<br></br>\r\n  Find distance to all nodes from start, all distances=infinity except start node to begin <br></br>\r\n<b id=\"bold\">1.</b> Pick the closest node to visit, which is start node.\r\n  <b id=\"bold\">2.</b> Update neighboring nodes, set their distance to current distance + 1.<br></br>\r\n  <b id=\"bold\">3.</b> Mark start node visited. Select next closest node.\r\n  <b id=\"bold\">4.</b> Pick one of the 4 neighbors and repeat.<br></br><br></br>\r\n<b id=\"bold\">Note: </b>The most efficient way to keep track of the closest unvisited node is by using a Min Heap.<br></br>\r\n  Since the amount of nodes is so few here, we opt for using an array of unvisited nodes and<br></br>\r\n   sort the nodes with each pass. The nodes are animated in the order that they are visited.\r\n\r\n\r\n</div>\r\n\r\n          <Button\r\n              style={{ marginRight: 16 }}\r\n              onClick={() => this.clearPath()}\r\n            >\r\n              Clear Path\r\n            </Button>\r\n\r\n            <Button\r\n              color=\"blue\"\r\n              style={{ marginRight: 16 }}\r\n              onClick={() => this.visualizeDijkstra()}>\r\n              Visualize Algorithm\r\n            </Button>\r\n\r\n\r\n\r\n\r\n        <Button onClick={() => this.resetSketch()}>\r\n          Reset Board\r\n        </Button>\r\n\r\n        <div className=\"dijkstraGrid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  return (\r\n                    <Node\r\n                      key={nodeIdx}\r\n                      col={col}\r\n                      isFinish={isFinish}\r\n                      isStart={isStart}\r\n                      isWall={isWall}\r\n                      mouseIsPressed={mouseIsPressed}\r\n                      onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                      onMouseEnter={(row, col) =>\r\n                        this.handleMouseEnter(row, col)\r\n                      }\r\n                      onMouseUp={() => this.handleMouseUp()}\r\n                      row={row}\r\n                    ></Node>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst getInitialGrid = () => {\r\n  const grid = [];\r\n  for (let row = 0; row < 20; row++) {\r\n    const currentRow = [];\r\n    for (let col = 0; col < 50; col++) {\r\n      currentRow.push(createNode(col, row));\r\n    }\r\n    grid.push(currentRow);\r\n  }\r\n  return grid;\r\n};\r\n\r\nconst createNode = (col, row) => {\r\n  return {\r\n    col,\r\n    row,\r\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\r\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\r\n    distance: Infinity,\r\n    isVisited: false,\r\n    isWall: false,\r\n    previousNode: null\r\n  };\r\n};\r\n\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: !node.isWall\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// import {\r\n//   Container, Row, Col, Navbar, NavbarBrand, Nav, NavItem, NavLink, Card, CardBody, CardTitle, CardSubtitle, CardText, Button\r\n// } from 'reactstrap';\r\n\r\nexport default class HomeScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n\r\nrender() {\r\n    return (\r\n      <section id=\"cover\">\r\n          <div class=\"container\">\r\n              <div class=\"row\">\r\n                  <div class=\"col-sm-3\">\r\n                     <p class=\"lead wall-sticker\">\r\n                         the\r\n                       algorithm\r\n                     visualizer\r\n                     </p>\r\n                  </div>\r\n                  <div class=\"col-sm-9\">\r\n                      <h1 class=\"moto\">Take part in the <span class=\"bold-green\"><br></br>interactive</span> experience.\r\n\r\n                     </h1>\r\n                      <a href=\"#section-cards\"><i class=\"fa fa-arrow-down\"></i></a>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n     </section>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nexport default class NavBar extends Component {\r\n\r\n\r\n  // hideFixedMenu = () => this.setState({ fixed: false });\r\n  // showFixedMenu = () => this.setState({ fixed: true });\r\n\r\n  render() {\r\n    // const { fixed } = this.state;\r\n    // const { onVisiualizePressed, onClearPathPressed } = this.props;\r\n    return (\r\n      <div>\r\n        <nav class=\"navbar navbar-expand-sm  bg-custom-blue\">\r\n            <button class=\"navbar-toggler hidden-sm-up\" type=\"button\" data-toggle=\"collapse\" data-target=\"#exCollapsingNavbar2\" aria-controls=\"exCollapsingNavbar2\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">&#9776;</button>\r\n\r\n            <div class=\"collapse navbar-toggleable-xs\" id=\"exCollapsingNavbar2\">\r\n                <a class=\"navbar-brand\" href=\"#cover\">ALGORITHMS</a>\r\n\r\n                <br>\r\n                </br>\r\n\r\n                <ul class=\"nav navbar-nav\">\r\n                  <li class=\"nav-item nav-custom-item\">\r\n                      <a class=\"nav-link\" href=\"#cover\">Home</a>\r\n                  </li>\r\n                            <li class=\"nav-item nav-custom-item\">\r\n                                <a class=\"nav-link\" href=\"#dijkstraTitle\">Dijkstra's Algorithm</a>\r\n                            </li>\r\n                            <li class=\"nav-item nav-custom-item\">\r\n                                 <a class=\"nav-link\" href=\"#BFS\">BFS</a>\r\n                            </li>\r\n                            <li class=\"nav-item nav-custom-item\">\r\n                                 <a class=\"nav-link\" href=\"#BSort\">Quicksort</a>\r\n                            </li>\r\n                            <li class=\"nav-item nav-custom-item\">\r\n                                 <a class=\"nav-link\" href=\"#QSort\">Bubble Sort</a>\r\n                            </li>\r\n\r\n                        </ul>\r\n            </div>\r\n        </nav>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// <Menu className=\"navBarMenu\" inverted style={{ backgroundColor: \"#061830\" }}>\r\n//   <Container>\r\n//     <Menu.Item as=\"a\" header>\r\n//       <Image\r\n//         size=\"mini\"\r\n//         src={require(\"../assets/path-algo-icon.png\")}\r\n//         style={{ marginRight: \"1.5em\" }}\r\n//       />\r\n//       Algorithm Visualizer\r\n//     </Menu.Item>\r\n//     <Menu.Item as=\"a\">Dijkstra's Algorithm</Menu.Item>\r\n//     <Menu.Item as=\"a\">Breadth First Search</Menu.Item>\r\n//     <Menu.Item as=\"a\">Quicksort</Menu.Item>\r\n//     <Menu.Item as=\"a\">Bubble Sort</Menu.Item>\r\n//\r\n//\r\n//     <Menu.Item position=\"right\">\r\n//\r\n//     </Menu.Item>\r\n//   </Container>\r\n// </Menu>\r\n\r\n\r\n// <nav class=\"navbar navbar-expand-sm bg-custom-blue\">\r\n//     <button class=\"navbar-toggler hidden-sm-up\" type=\"button\" data-toggle=\"collapse\" data-target=\"#exCollapsingNavbar2\" aria-controls=\"exCollapsingNavbar2\" aria-expaded=\"false\" aria-label=\"Toggle navigation\">&#9776;</button>\r\n//\r\n//     <div class=\"collapse navbar-toggleable-xs\" id=\"exCollapsingNavbar2\">\r\n//         <a class=\"navbar-brand text-custom\" href=\"#cover\">\r\n//\r\n//           Algorithms\r\n//           </a>\r\n//\r\n//         <br>\r\n//         </br>\r\n//\r\n//         <ul class=\"nav navbar-nav\">\r\n//             <li class=\"nav-item nav-custom-item\">\r\n//                 <a class=\"nav-link\" href=\"#cover\">Dijkstra's Algorithm</a>\r\n//             </li>\r\n//             <li class=\"nav-item nav-custom-item\">\r\n//                  <a class=\"nav-link\" href=\"#features\">BFS</a>\r\n//             </li>\r\n//             <li class=\"nav-item nav-custom-item\">\r\n//                  <a class=\"nav-link\" href=\"#timeline\">Quicksort</a>\r\n//             </li>\r\n//             <li class=\"nav-item nav-custom-item\">\r\n//                  <a class=\"nav-link\" href=\"#section-cards\">Bubble Sort</a>\r\n//             </li>\r\n//\r\n//         </ul>\r\n//     </div>\r\n// </nav>\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport P5Wrapper from 'react-p5-wrapper';\r\nimport Button from 'react-p5-wrapper';\r\n\r\n\r\n\r\nexport default class BSort extends Component {\r\n\r\n  sketch(p){\r\n    let values = [];\r\n  let w = 30;\r\n  let states = [];\r\n  let slow = false;\r\n  let slower = false;\r\n  let normal = true;\r\n\r\n      p.setup = () => {\r\n\r\n        p.createCanvas(900, 600);\r\n\r\n    values = new Array(p.floor(p.width / w));\r\n    for (let i = 0; i < values.length; i++) {\r\n      values[i] = p.random(p.height);\r\n      states[i] = -1;\r\n    }\r\n    quickSort(values, 0, values.length - 1);\r\n    var button = p.createButton(\"reset\");\r\n    button.mousePressed(resetSketch);\r\n    button.parent(\"resetBSort\");\r\n    var slowerBtn = p.createButton(\"slower\");\r\n    slowerBtn.mousePressed(quarter_speed);\r\n    slowerBtn.parent(\"resetBSort\");\r\n    var slowBtn = p.createButton(\"slow\");\r\n    slowBtn.mousePressed(half_speed);\r\n    slowBtn.parent(\"resetBSort\");\r\n    var normalBtn = p.createButton(\"normal\");\r\n    normalBtn.mousePressed(normal_speed);\r\n    normalBtn.parent(\"resetBSort\");\r\n\r\n      }\r\n\r\n      function resetSketch() {\r\n        window.location.reload();\r\n      }\r\n\r\n      function half_speed() {\r\n        slow = true;\r\n        normal = false;\r\n        slower = false;\r\n      }\r\n      function quarter_speed() {\r\n        slower = true;\r\n        normal = false;\r\n        slow = false;\r\n      }\r\n      function normal_speed() {\r\n        slow = false;\r\n        normal = true;\r\n        slower = false;\r\n      }\r\n\r\n\r\n      async function quickSort(arr, start, end) {\r\n        if (start >= end) {\r\n          return;\r\n        }\r\n        let index = await partition(arr, start, end);\r\n        states[index] = -1;\r\n\r\n        await Promise.all([\r\n          quickSort(arr, start, index - 1),\r\n          quickSort(arr, index + 1, end)\r\n        ]);\r\n      }\r\n\r\n      async function partition(arr, start, end) {\r\n    for (let i = start; i < end; i++) {\r\n      states[i] = 1;\r\n    }\r\n\r\n    let pivotValue = arr[end];\r\n    let pivotIndex = start;\r\n    states[pivotIndex] = 0;\r\n    for (let i = start; i < end; i++) {\r\n      if (arr[i] < pivotValue) {\r\n        await swap(arr, i, pivotIndex);\r\n        states[pivotIndex] = -1;\r\n        pivotIndex++;\r\n        states[pivotIndex] = 0;\r\n      }\r\n    }\r\n    await swap(arr, pivotIndex, end);\r\n\r\n    for (let i = start; i < end; i++) {\r\n      if (i != pivotIndex) {\r\n        states[i] = -1;\r\n      }\r\n    }\r\n\r\n    return pivotIndex;\r\n  }\r\n\r\n      p.draw = () => {\r\n        p.background(0);\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n      p.noStroke();\r\n      if (states[i] == 0) {\r\n        p.fill('#E0777D');\r\n      } else if (states[i] == 1) {\r\n        p.fill('#D6FFB7');\r\n      } else if (states[i] == 2) {\r\n        p.fill('#0000FF');\r\n      }else {\r\n        p.fill(255);\r\n      }\r\n      p.rect(i * w, p.height - values[i], w, values[i]);\r\n    }\r\n      }\r\n\r\n      p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n        if(p.canvas) //Make sure the canvas has been created\r\n          p.fill(newProps.color);\r\n      }\r\n\r\n      async function swap(arr, a, b) {\r\n        if(slow) {\r\n          await sleep(1000);\r\n        }else if(slower) {\r\n          await sleep(3000);\r\n        }else if(normal) {\r\n          await sleep(300);\r\n        }\r\n\r\n        let temp = arr[a];\r\n        arr[a] = arr[b];\r\n        arr[b] = temp;\r\n      }\r\n\r\n      function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n  }\r\n\r\n\r\nrender() {\r\n    return (\r\n\r\n      <section id=\"BSort\">\r\n        <div className=\"title3\">\r\n        Quick Sort\r\n        </div>\r\n        <div className=\"description3\">\r\n          <b>Current position</b> in the array is indicated by the red bar.<br></br>\r\n          <b>Pivot value</b> is indicated by the element immediately to the right of the green shade.<br></br>\r\n          <b>How it works:</b> We scan through the array from left to right.<br></br>\r\n          All values greater than the pivot are swapped with currentPosition(red bar).<br></br>\r\n          All values less than pivot are skipped over.<br></br>\r\n        Pivot value is swapped with currentPosition when all green shade values are less than pivot.<br></br>\r\n      Subsequently, a new pivot is chosen, indicated by a new red bar appearing.\r\n        </div>\r\n        <div id=\"resetBSort\"></div>\r\n\r\n\r\n        <P5Wrapper sketch={this.sketch}></P5Wrapper>\r\n\r\n      </section>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  Button\r\n} from \"semantic-ui-react\";\r\n\r\n\r\nvar DUMMY_OBSTACLES = ['{\"q\":6,\"r\":9,\"s\":-15}', '{\"q\":7,\"r\":8,\"s\":-15}', '{\"q\":7,\"r\":7,\"s\":-14}', '{\"q\":8,\"r\":6,\"s\":-14}', '{\"q\":8,\"r\":5,\"s\":-13}', '{\"q\":9,\"r\":4,\"s\":-13}', '{\"q\":5,\"r\":9,\"s\":-14}',\r\n '{\"q\":4,\"r\":9,\"s\":-13}', '{\"q\":3,\"r\":9,\"s\":-12}', '{\"q\":2,\"r\":9,\"s\":-11}', '{\"q\":1,\"r\":9,\"s\":-10}', '{\"q\":0,\"r\":9,\"s\":-9}', '{\"q\":-1,\"r\":9,\"s\":-8}', '{\"q\":-2,\"r\":9,\"s\":-7}', '{\"q\":-3,\"r\":9,\"s\":-6}',\r\n  '{\"q\":-4,\"r\":9,\"s\":-5}', '{\"q\":-5,\"r\":9,\"s\":-4}', '{\"q\":-6,\"r\":9,\"s\":-3}', '{\"q\":-7,\"r\":9,\"s\":-2}', '{\"q\":-8,\"r\":9,\"s\":-1}', '{\"q\":-9,\"r\":9,\"s\":0}', '{\"q\":-11,\"r\":9,\"s\":2}', '{\"q\":-10,\"r\":9,\"s\":1}',\r\n   '{\"q\":-12,\"r\":9,\"s\":3}', '{\"q\":-13,\"r\":9,\"s\":4}', '{\"q\":-14,\"r\":9,\"s\":5}', '{\"q\":-15,\"r\":9,\"s\":6}', '{\"q\":-15,\"r\":8,\"s\":7}', '{\"q\":-14,\"r\":7,\"s\":7}', '{\"q\":-14,\"r\":6,\"s\":8}', '{\"q\":-13,\"r\":5,\"s\":8}',\r\n    '{\"q\":-13,\"r\":4,\"s\":9}', '{\"q\":-12,\"r\":3,\"s\":9}', '{\"q\":-12,\"r\":2,\"s\":10}', '{\"q\":-11,\"r\":1,\"s\":10}', '{\"q\":-11,\"r\":0,\"s\":11}', '{\"q\":-10,\"r\":-1,\"s\":11}', '{\"q\":-10,\"r\":-2,\"s\":12}',\r\n     '{\"q\":-9,\"r\":-3,\"s\":12}', '{\"q\":-9,\"r\":-4,\"s\":13}', '{\"q\":-8,\"r\":-5,\"s\":13}', '{\"q\":-8,\"r\":-6,\"s\":14}', '{\"q\":-7,\"r\":-7,\"s\":14}', '{\"q\":-7,\"r\":-8,\"s\":15}', '{\"q\":-6,\"r\":-9,\"s\":15}',\r\n      '{\"q\":-5,\"r\":-9,\"s\":14}', '{\"q\":-4,\"r\":-9,\"s\":13}', '{\"q\":-3,\"r\":-9,\"s\":12}', '{\"q\":-2,\"r\":-9,\"s\":11}', '{\"q\":-1,\"r\":-9,\"s\":10}', '{\"q\":0,\"r\":-9,\"s\":9}', '{\"q\":1,\"r\":-9,\"s\":8}', '{\"q\":2,\"r\":-9,\"s\":7}',\r\n       '{\"q\":3,\"r\":-9,\"s\":6}', '{\"q\":4,\"r\":-9,\"s\":5}', '{\"q\":5,\"r\":-9,\"s\":4}', '{\"q\":6,\"r\":-9,\"s\":3}', '{\"q\":7,\"r\":-9,\"s\":2}', '{\"q\":8,\"r\":-9,\"s\":1}', '{\"q\":9,\"r\":-9,\"s\":0}', '{\"q\":10,\"r\":-9,\"s\":-1}',\r\n        '{\"q\":11,\"r\":-9,\"s\":-2}', '{\"q\":12,\"r\":-9,\"s\":-3}', '{\"q\":13,\"r\":-9,\"s\":-4}', '{\"q\":14,\"r\":-9,\"s\":-5}', '{\"q\":15,\"r\":-9,\"s\":-6}', '{\"q\":15,\"r\":-8,\"s\":-7}', '{\"q\":14,\"r\":-7,\"s\":-7}',\r\n         '{\"q\":14,\"r\":-6,\"s\":-8}', '{\"q\":13,\"r\":-5,\"s\":-8}', '{\"q\":13,\"r\":-4,\"s\":-9}', '{\"q\":12,\"r\":-3,\"s\":-9}', '{\"q\":12,\"r\":-2,\"s\":-10}', '{\"q\":11,\"r\":-1,\"s\":-10}', '{\"q\":11,\"r\":0,\"s\":-11}',\r\n          '{\"q\":10,\"r\":1,\"s\":-11}', '{\"q\":10,\"r\":2,\"s\":-12}', '{\"q\":9,\"r\":3,\"s\":-12}', '{\"q\":-2, \"r\":-8, \"s\":10}', '{\"q\": -3, \"r\": -7, \"s\": 10}', '{\"q\": -4, \"r\": -6, \"s\": 10}', '{\"q\": -5, \"r\": -5, \"s\": 10}',\r\n          '{\"q\": -6, \"r\": -4, \"s\": 10}', '{\"q\": -7, \"r\": -4, \"s\": 11}', '{\"q\": 4, \"r\": -7, \"s\": 3}', '{\"q\": 3, \"r\": -6, \"s\": 3}', '{\"q\": 2, \"r\": -5, \"s\": 3}',\r\n    '{\"q\": 1, \"r\": -4, \"s\": 3}',\r\n    '{\"q\": 2, \"r\": -4, \"s\": 2}',\r\n    '{\"q\": 3, \"r\": -4, \"s\": 1}',\r\n    '{\"q\": 4, \"r\": -4, \"s\": 0}',\r\n    '{\"q\": 9, \"r\": -3, \"s\": -6}',\r\n    '{\"q\": 10, \"r\": -3, \"s\": -7}',\r\n    '{\"q\": 8, \"r\": -2, \"s\": -6}',\r\n    '{\"q\": 7, \"r\": -2, \"s\": -5}',\r\n    '{\"q\": 4, \"r\": -2, \"s\": -2}',\r\n    '{\"q\": 4, \"r\": -1, \"s\": -3}',\r\n    '{\"q\": 4, \"r\": 0, \"s\": -4}',\r\n    '{\"q\": 4, \"r\": 1, \"s\": -5}',\r\n    '{\"q\": 3, \"r\": 2, \"s\": -5}',\r\n    '{\"q\": 2, \"r\": 3, \"s\": -5}',\r\n    '{\"q\": 1, \"r\": 4, \"s\": -5}',\r\n    '{\"q\": -0, \"r\": 5, \"s\": -5}',\r\n    '{\"q\": -1, \"r\": 6, \"s\": -5}',\r\n    '{\"q\": -2, \"r\": 7, \"s\": -5}',\r\n    '{\"q\": 4, \"r\": 5, \"s\": -9}',\r\n    '{\"q\": 4, \"r\": 6, \"s\": -10}',\r\n    '{\"q\": 5, \"r\": 6, \"s\": -11}',\r\n    '{\"q\": 5, \"r\": 7, \"s\": -12}',\r\n    '{\"q\": -5, \"r\": 7, \"s\": -2}',\r\n    '{\"q\": -5, \"r\": 8, \"s\": -3}',\r\n    '{\"q\": -5, \"r\": 6, \"s\": -1}',\r\n    '{\"q\": -5, \"r\": 5, \"s\": 0}',\r\n    '{\"q\": -4, \"r\": 4, \"s\": -0}',\r\n    '{\"q\": -3, \"r\": 3, \"s\": -0}',\r\n    '{\"q\": -5, \"r\": 3, \"s\": 2}',\r\n    '{\"q\": -6, \"r\": 4, \"s\": 2}',\r\n    '{\"q\": -4, \"r\": 2, \"s\": 2}',\r\n    '{\"q\": -4, \"r\": 1, \"s\": 3}',\r\n    '{\"q\": -7, \"r\": 4, \"s\": 3}',\r\n    '{\"q\": -8, \"r\": 4, \"s\": 4}',\r\n    '{\"q\": -9, \"r\": 4, \"s\": 5}',\r\n    '{\"q\": -10, \"r\": 4, \"s\": 6}',\r\n    '{\"q\": -11, \"r\": 4, \"s\": 7}',\r\n    '{\"q\": -12, \"r\": 4, \"s\": 8}',\r\n    '{\"q\": -6, \"r\": 1, \"s\": 5}',\r\n    '{\"q\": -6, \"r\": 0, \"s\": 6}',\r\n    '{\"q\": -6, \"r\": -1, \"s\": 7}',\r\n    '{\"q\": -6, \"r\": -2, \"s\": 8}',\r\n    '{\"q\": -2, \"r\": -1, \"s\": 3}',\r\n    '{\"q\": -2, \"r\": -2, \"s\": 4}']\r\n\r\n\r\n\r\n\r\nexport default class BreadthFirstSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleExpandClick = this.handleExpandClick.bind(this);\r\n\r\n    this.state = {\r\n      hexSize: 20,\r\n      //position of the very middle hexagon (changes the numbers seen in hexagons)\r\n      //decreasing y moves hexagon(0,0,0) upwards, increasing x moves hexagon(0,0,0) to the right\r\n      hexOrigin: { x: 400, y: 300 },\r\n      currentHex: {q: 0, r: 0, s: 0, x: 0, y: 0},\r\n      playerPosition: {q: 0, r: 0, s: 0, x: 400, y: 300},\r\n      obstacles: DUMMY_OBSTACLES,\r\n      frontier: [],\r\n      //storing hexagons starting from playerPosition\r\n      cameFrom: {}\r\n    }\r\n  }\r\n  componentWillMount(){\r\n    let hexParametres = this.getHexParametres();\r\n    this.setState({\r\n      canvasSize: { canvasWidth: 800, canvasHeight: 600 },\r\n      hexParametres: hexParametres\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n    this.canvasHex.width = canvasWidth;\r\n    this.canvasHex.height = canvasHeight;\r\n    this.canvasInteraction.width = canvasWidth;\r\n    this.canvasInteraction.height = canvasHeight;\r\n    this.canvasView.width = canvasWidth;\r\n    this.canvasView.height = canvasHeight;\r\n    this.getCanvasPosition(this.canvasInteraction);\r\n    this.drawHex(this.canvasInteraction, this.Point(this.state.playerPosition.x, this.state.playerPosition.y), 1, \"grey\", \"red\", 0.2);\r\n    this.drawHexes();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(nextState.currentHex !== this.state.currentHex) {\r\n      const { q, r, s, x, y } = nextState.currentHex;\r\n      const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n      const ctx = this.canvasInteraction.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n      let currentDistanceLine = nextState.currentDistanceLine;\r\n\r\n      for (let i = 0; i <= currentDistanceLine.length - 2; i++) {\r\n        if(i === 0) {\r\n          this.drawHex(this.canvasInteraction, this.Point(currentDistanceLine[i].x, currentDistanceLine[i].y), 1, \"black\", \"red\");\r\n        }else {\r\n          this.drawHex(this.canvasInteraction, this.Point(currentDistanceLine[i].x, currentDistanceLine[i].y), 1, \"black\", \"grey\");\r\n        }\r\n\r\n      }\r\n      nextState.obstacles.map((l)=>{\r\n        const { q, r, s } = JSON.parse(l);\r\n        const { x, y } = this.hexToPixel(this.Hex(q, r, s))\r\n        this.drawHex(this.canvasInteraction, this.Point(x, y), 1, \"black\", \"black\");\r\n\r\n      })\r\n      this.drawHex(this.canvasInteraction, this.Point(x, y), 1, \"black\", \"grey\");\r\n      return true;\r\n    }\r\n    if(nextState.cameFrom !== this.state.cameFrom) {\r\n      const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n      const ctx = this.canvasView.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n      for(let l in nextState.cameFrom) {\r\n        const { q, r, s } = JSON.parse(l);\r\n        const { x, y } = this.hexToPixel(this.Hex(q, r));\r\n        this.drawHex(this.canvasView, this.Point(x, y), 1, \"black\", \"green\", 0.1);\r\n      }\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  drawHexes() {\r\n    const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n    const { hexWidth, hexHeight, vertDist, horizDist } = this.state.hexParametres;\r\n    //calculate how many columns are on the left side\r\n    //hexOrigin is distance from coorindate x = 0 to hex0(middle hexagon)\r\n    const hexOrigin = this.state.hexOrigin;\r\n    //dividing the distance from the left side of border(x=0) by\r\n    //the width of a hexagon to calculate how many hexagons fit on left\r\n    let qLeftSide = Math.round(hexOrigin.x/horizDist);\r\n    //calculate how many hexagons will fit on the right\r\n    let qRightSide = Math.round((canvasWidth - hexOrigin.x)/horizDist);\r\n    let rTopSide = Math.round(hexOrigin.y/vertDist);\r\n    let rBottomSide = Math.round((canvasHeight - hexOrigin.y)/vertDist);\r\n    var p = 0;\r\n    //screenshot 1 - populates hexigons vertically (populates POSITIVE rows)\r\n    for(let r = 0; r <= rBottomSide; r++) {\r\n      if(r%2 === 0 && r !== 0) {\r\n        p++;\r\n      }\r\n      //populates hexigons horizontally in upper half (populates POSITIVE columns)\r\n      for(let q = -qLeftSide; q <= qRightSide; q++) {\r\n          const { x, y } = this.hexToPixel(this.Hex(q-p, r));\r\n          if((x > hexWidth/2 && x < canvasWidth - hexWidth/2) && (y > hexHeight/2 && y < canvasHeight - hexHeight/2)) {\r\n            this.drawHex(this.canvasHex, this.Point(x,y), 1, \"black\", \"grey\");\r\n            //passing in canvas and position of each hex(row, column)\r\n\r\n          }\r\n      }\r\n    }\r\n    var n = 0;\r\n    //screenshot 1 - populates hexigons vertically (populates NEGATIVE rows)\r\n    for(let r = -1; r >= -rTopSide; r--) {\r\n      if(r%2 !== 0) {\r\n        n++;\r\n      }\r\n      //populates hexigons horizontally in lower half (populates NEGATIVE columns)\r\n      for(let q = -qLeftSide; q <= qRightSide; q++) {\r\n          //adding integers to hexToPixel arguments shifts hexagons right\r\n          const { x, y } = this.hexToPixel(this.Hex(q+n, r));\r\n          if((x > hexWidth/2 && x < canvasWidth - hexWidth/2) && (y > hexHeight/2 && y < canvasHeight - hexHeight/2)) {\r\n            this.drawHex(this.canvasHex, this.Point(x,y), 1, \"black\", \"grey\");\r\n\r\n          }\r\n      }\r\n    }\r\n  }\r\n\r\n  //builds the individual hex shape\r\n  drawHex(canvasID, center, lineWidth, lineColor, fillColor) {\r\n    for(let i = 0; i <=5; i++) {\r\n      let start = this.getHexCornerCoord(center, i);\r\n      let end = this.getHexCornerCoord(center, i + 1);\r\n\r\n      this.fillHex(canvasID, center, fillColor);\r\n      this.drawLine(canvasID, start, end, lineWidth, lineColor);\r\n\r\n    }\r\n  }\r\n\r\n  //get the coordinates of the corner to draw the hex\r\n    getHexCornerCoord(center, i) {\r\n      var angle_deg = 60 * i + 30;\r\n      var angle_rad = Math.PI / 180 * angle_deg;\r\n      let x = center.x + this.state.hexSize * Math.cos(angle_rad);\r\n      let y = center.y + this.state.hexSize * Math.sin(angle_rad);\r\n      return this.Point(x, y);\r\n    }\r\n\r\n    Hex(q, r, s) {\r\n      return {q: q, r: r, s: s}\r\n    }\r\n\r\n    Point(x, y) {\r\n      return {x: x, y: y}\r\n    }\r\n\r\n//draws the line that shapes the hex\r\n  drawLine(canvasID, start, end, lineWidth, lineColor) {\r\n    const ctx = canvasID.getContext(\"2d\");\r\n    ctx.beginPath();\r\n    ctx.moveTo(start.x, start.y);\r\n    ctx.strokeStyle = lineColor;\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.lineTo(end.x, end.y);\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  }\r\n\r\n  fillHex(canvasID, center, fillColor) {\r\n    let c0 = this.getHexCornerCoord(center, 0);\r\n    let c1 = this.getHexCornerCoord(center, 1);\r\n    let c2 = this.getHexCornerCoord(center, 2);\r\n    let c3 = this.getHexCornerCoord(center, 3);\r\n    let c4 = this.getHexCornerCoord(center, 4);\r\n    let c5 = this.getHexCornerCoord(center, 5);\r\n    const ctx = canvasID.getContext(\"2d\");\r\n    ctx.beginPath();\r\n    ctx.fillStyle = fillColor;\r\n    ctx.globalAlpha = 0.1;\r\n    ctx.moveTo(c0.x, c0.y);\r\n    ctx.lineTo(c1.x, c1.y);\r\n    ctx.lineTo(c2.x, c2.y);\r\n    ctx.lineTo(c3.x, c3.y);\r\n    ctx.lineTo(c4.x, c4.y);\r\n    ctx.lineTo(c5.x, c5.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n  }\r\n\r\n//prints the coordinates inside of the hexagons\r\n  drawHexCoordinates(canvasID, center, h) {\r\n    const ctx = canvasID.getContext(\"2d\");\r\n    ctx.fillText(h.q, center.x+6, center.y);\r\n    ctx.fillText(h.r, center.x-3, center.y+15);\r\n    ctx.fillText(h.s, center.x-12, center.y);\r\n  }\r\n\r\n\r\n\r\n  getHexParametres() {\r\n    let hexHeight = this.state.hexSize * 2;\r\n    let hexWidth = Math.sqrt(3)/2 * hexHeight;\r\n    //vertical distance between hexigons in each row\r\n    let vertDist = hexHeight * 3/4;\r\n    let horizDist = hexWidth;\r\n    return { hexWidth, hexHeight, vertDist, horizDist }\r\n  }\r\n\r\n  hexToPixel(h) {\r\n    //can change where the bundle of hexes originates on the whole grid\r\n    let hexOrigin = this.state.hexOrigin;\r\n    let x = this.state.hexSize * Math.sqrt(3) * (h.q + h.r/2) + hexOrigin.x;\r\n    let y = this.state.hexSize * 3/2 * h.r + hexOrigin.y;\r\n    return this.Point(x, y)\r\n  }\r\n\r\n  pixelToHex(p) {\r\n    let size = this.state.hexSize;\r\n    let origin = this.state.hexOrigin;\r\n    let q = ((p.x - origin.x) * Math.sqrt(3)/3 - (p.y - origin.y) / 3) / size\r\n    let r = (p.y - origin.y) * 2/3 / size\r\n    return this.Hex(q, r, -q - r);\r\n  }\r\n\r\n  getDistanceLine(hexA, hexB) {\r\n    let dist = this.cubeDistance(hexA, hexB);\r\n    var arr = [];\r\n    for(let i = 0; i <= dist; i++) {\r\n     let center = this.hexToPixel(this.cubeRound(this.cubeLinearInt(hexA, hexB, 1.0 / dist * i)));\r\n     arr = [].concat(arr, center);\r\n    }\r\n    this.setState({\r\n      currentDistanceLine: arr\r\n    })\r\n  }\r\n\r\n\r\n\r\n  cubeDirection(direction) {\r\n    const cubeDirections = [this.Hex(1, 0, -1), this.Hex(1, -1, 0), this.Hex(0, -1, 1),\r\n    this.Hex(-1, 0, 1), this.Hex(-1, 1, 0), this.Hex(0, 1, -1)];\r\n    return cubeDirections[direction];\r\n  }\r\n\r\n  cubeLinearInt(hexA, hexB, t) {\r\n    return this.Hex(this.linearInt(hexA.q, hexB.q, t), this.linearInt(hexA.r, hexB.r, t),\r\n    this.linearInt(hexA.s, hexB.s, t));\r\n  }\r\n\r\n  linearInt(a, b, t) {\r\n    return (a + (b - a) * t)\r\n  }\r\n\r\n  cubeAdd(a, b) {\r\n    return this.Hex(a.q + b.q, a.r + b.r, a.s + b.s);\r\n  }\r\n\r\n  cubeSubstract(hexA, hexB) {\r\n    return this.Hex(hexA.q - hexB.q, hexA.r - hexB.r, hexA.s - hexB.s);\r\n  }\r\n\r\n  getCubeNeighbor(h, direction) {\r\n    return this.cubeAdd(h, this.cubeDirection(direction));\r\n  }\r\n\r\n  getNeighbors(h) {\r\n    var arr = [];\r\n    for(let i = 0; i <=5; i++) {\r\n      const { q, r, s } = this.getCubeNeighbor(this.Hex(h.q, h.r, h.s), i);\r\n      arr.push(this.Hex(q, r, s));\r\n    }\r\n    return arr;\r\n  }\r\n\r\n\r\n\r\n  cubeRound(cube) {\r\n    var rx = Math.round(cube.q)\r\n    var ry = Math.round(cube.r)\r\n    var rz = Math.round(cube.s)\r\n    var x_diff = Math.abs(rx - cube.q)\r\n    var y_diff = Math.abs(ry - cube.r)\r\n    var z_diff = Math.abs(rz - cube.s)\r\n    if(x_diff > y_diff && x_diff > z_diff) {\r\n      rx = -ry-rz\r\n    }\r\n    else if(y_diff > z_diff) {\r\n      ry = -rx-rz\r\n    }\r\n    else{\r\n      rz = -rx-ry\r\n    }\r\n    return this.Hex(rx, ry, rz)\r\n  }\r\n\r\n\r\n\r\n  cubeDistance(hexA, hexB) {\r\n    const { q, r, s } = this.cubeSubstract(hexA, hexB);\r\n    return (Math.abs(q) + Math.abs(r) + Math.abs(s)) / 2;\r\n  }\r\n\r\n\r\n  drawNeighbors(h) {\r\n    for(let i = 0; i <= 5; i++) {\r\n      const { q, r, s } = this.getCubeNeighbor(this.Hex(h.q, h.r, h.s), i);\r\n      const { x, y } = this.hexToPixel(this.Hex(q, r, s));\r\n      this.drawHex(this.canvasInteraction, this.Point(x, y), \"red\", 2);\r\n    }\r\n  }\r\n\r\n\r\n    getCanvasPosition(canvasID) {\r\n      let rect = canvasID.getBoundingClientRect();\r\n      this.setState({\r\n         canvasPosition: { left:rect.left, right: rect.right, top: rect.top, bottom: rect.bottom }\r\n      })\r\n    }\r\n\r\n  handleMouseMove(e) {\r\n    const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n    const { hexWidth, hexHeight, vertDist, horizDist } = this.state.hexParametres;\r\n    //const { left, right, top, bottom } = this.state.canvasPosition;\r\n    //changing the number at the end affects result exponentially\r\n    var canvasPos = document.getElementById(\"canv3\");\r\n    let rect = canvasPos.getBoundingClientRect();\r\n    let offsetX = e.pageX - rect.left;\r\n    let offsetY = (e.pageY - (window.pageYOffset + rect.top));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const { q, r, s } = this.cubeRound(this.pixelToHex(this.Point(offsetX, offsetY)));\r\n    const { x, y } = this.hexToPixel(this.Hex(q, r, s));\r\n\r\n   let playerPosition = this.state.playerPosition;\r\n\r\n\r\n    this.getDistanceLine(this.Hex(0,0,0), this.Hex(q,r,s));\r\n\r\n    if((x > hexWidth/2 && x < canvasWidth - hexWidth/2) && (y > hexHeight/2 && y < canvasHeight - hexHeight/2)) {\r\n      this.setState({\r\n        currentHex: {q, r, s, x, y}\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  handleClick() {\r\n    this.addObstacles();\r\n  }\r\n\r\n  addObstacles() {\r\n    const { q, r, s } = this.state.currentHex;\r\n    let obstacles = this.state.obstacles;\r\n    if(!obstacles.includes(JSON.stringify(this.Hex(q, r, s)))) {\r\n      obstacles = [].concat(obstacles, JSON.stringify(this.Hex(q, r, s)))\r\n    } else {\r\n      obstacles.map((l,i) => {\r\n        if(l === JSON.stringify(this.Hex(q, r, s))) {\r\n          obstacles = obstacles.slice(0, i).concat(obstacles.slice(i+1));\r\n        }\r\n      })\r\n    }\r\n    console.log({\"q\":q, \"r\":r, \"s\":s})\r\n    this.setState({\r\n      obstacles: obstacles\r\n    })\r\n  }\r\n\r\n  handleExpandClick() {\r\n    var frontier = this.state.frontier;\r\n    var cameFrom = this.state.cameFrom;\r\n    if(frontier == 0) {\r\n      frontier.push(this.Hex(0,0,0));\r\n      cameFrom[JSON.stringify(this.Hex(0,0,0))] = JSON.stringify(null);\r\n    }\r\n    let n = 0;\r\n    while(n < 1) {\r\n      var current = frontier.shift();\r\n      let arr = this.getNeighbors(current);\r\n      arr.map((l) => {\r\n        if(!cameFrom.hasOwnProperty(JSON.stringify(l)) && !this.state.obstacles.includes(JSON.stringify(l))) {\r\n          frontier.push(l);\r\n          cameFrom[JSON.stringify(l)] = JSON.stringify(current);\r\n        }\r\n      })\r\n      n++\r\n    }\r\n    cameFrom = Object.assign({}, cameFrom);\r\n    this.setState({\r\n      cameFrom: cameFrom\r\n    })\r\n  }\r\n\r\n  resetSketch() {\r\n  window.location.reload();\r\n  }\r\n\r\n\r\nrender() {\r\n    return (\r\n      <section id=\"BFS\">\r\n        <div className=\"description25\">\r\n        <b id=\"bold\">How to use:</b> Hit expand to see Breadth First Search carried out starting\r\n          from the middle node.\r\n        </div>\r\n\r\n        <canvas id=\"canv4\" ref={canvasHex => this.canvasHex = canvasHex }> </canvas>\r\n        <canvas id=\"canv3\" ref={canvasCoordinates => this.canvasCoordinates = canvasCoordinates }> </canvas>\r\n        <canvas id=\"canv2\" ref={canvasView => this.canvasView = canvasView }> </canvas>\r\n        <canvas id=\"canv1\" ref={canvasInteraction => this.canvasInteraction = canvasInteraction} onMouseMove = {this.handleMouseMove} onClick = {this.handleClick}> </canvas>\r\n          <Button\r\n              className=\"reset1\"\r\n              onClick={ this.resetSketch }\r\n              style= {{ textAlign: \"center\" }}\r\n            >\r\n              Reset\r\n            </Button>\r\n\r\n            <Button\r\n              className=\"expandButton1\"\r\n              color=\"blue\"\r\n              style={{textAlign: \"center\"}}\r\n              onClick={this.handleExpandClick}>\r\n              Expand\r\n            </Button>\r\n\r\n\r\n\r\n    </section>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport P5Wrapper from 'react-p5-wrapper';\r\nimport Button from 'react-p5-wrapper';\r\n\r\n\r\nexport default class QSort extends Component {\r\n  sketch(p){\r\n    let values = [];\r\n\r\nlet i = 0;\r\nlet j = 0;\r\nlet w = 50;\r\n\r\n\r\np.setup = () => {\r\n  p.createCanvas(900, 600);\r\n  values = new Array(p.width);\r\n  for (let i = 0; i < values.length; i++) {\r\n    values[i] = p.random(p.height);\r\n    //values[i] = noise(i/100.0)*height;\r\n  }\r\n  var button = p.createButton(\"reset\");\r\n  button.mousePressed(resetSketch);\r\n  button.parent(\"resetQSort\");\r\n}\r\n\r\nfunction resetSketch() {\r\n  window.location.reload();\r\n}\r\n\r\np.draw = () => {\r\n  p.background(0);\r\n\r\n  if (i < values.length) {\r\n    for (let j = 0; j < values.length - i - 1; j++) {\r\n      let a = values[j];\r\n      let b = values[j + 1];\r\n      if (a > b) {\r\n        swap(values, j, j + 1);\r\n      }\r\n    }\r\n  } else {\r\n    console.log(\"finished\");\r\n    p.noLoop();\r\n  }\r\n  i++;\r\n  for (let i = 0; i < values.length; i++) {\r\n    p.stroke(255);\r\n    p.line(i, p.height, i, p.height - values[i]);\r\n  }\r\n}\r\n\r\n\r\nfunction swap(arr, a, b) {\r\n  let temp = arr[a];\r\n  arr[a] = arr[b];\r\n  arr[b] = temp;\r\n}\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <section id=\"QSort\">\r\n\r\n        <div className=\"title4\">\r\n  Bubble Sort\r\n</div>\r\n\r\n<div className=\"description4\">\r\n  <b>Current position</b> in the array is indicated by the red bar.<br></br>\r\n  <b>Pivot value</b> is indicated by the element immediately to the right of the green shade.<br></br>\r\n  <b>How it works:</b> We scan through the array from left to right.<br></br>\r\n  All values greater than the pivot are swapped with currentPosition(red bar).<br></br>\r\n  All values less than pivot are skipped over.<br></br>\r\nPivot value is swapped with currentPosition when all green shade values are less than pivot.<br></br>\r\nSubsequently, a new pivot is chosen, indicated by a new red bar appearing.\r\n</div>\r\n<div id=\"resetQSort\"></div>\r\n<P5Wrapper sketch={this.sketch}></P5Wrapper>\r\n\r\n\r\n\r\n</section>\r\n);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './BFSExtra.css'\r\n\r\nvar DUMMY_OBSTACLES = ['{\"q\":4,\"r\":-2,\"s\":-2}', '{\"q\":4,\"r\":-1,\"s\":-3}', '{\"q\":4,\"r\":0,\"s\":-4}', '{\"q\":4,\"r\":1,\"s\":-5}', '{\"q\":3,\"r\":2,\"s\":-5}', '{\"q\":2,\"r\":3,\"s\":-5}', '{\"q\":1,\"r\":4,\"s\":-5}', '{\"q\":0,\"r\":5,\"s\":-5}', '{\"q\":-1,\"r\":6,\"s\":-5}', '{\"q\":-2,\"r\":7,\"s\":-5}', '{\"q\":4,\"r\":-4,\"s\":0}', '{\"q\":3,\"r\":-4,\"s\":1}', '{\"q\":2,\"r\":-4,\"s\":2}', '{\"q\":1,\"r\":-4,\"s\":3}', '{\"q\":2,\"r\":-5,\"s\":3}', '{\"q\":3,\"r\":-6,\"s\":3}', '{\"q\":4,\"r\":-7,\"s\":3}', '{\"q\":5,\"r\":-9,\"s\":4}', '{\"q\":6,\"r\":-9,\"s\":3}', '{\"q\":7,\"r\":-9,\"s\":2}', '{\"q\":8,\"r\":-9,\"s\":1}', '{\"q\":9,\"r\":-9,\"s\":0}', '{\"q\":10,\"r\":-9,\"s\":-1}', '{\"q\":11,\"r\":-9,\"s\":-2}', '{\"q\":12,\"r\":-9,\"s\":-3}', '{\"q\":13,\"r\":-9,\"s\":-4}', '{\"q\":14,\"r\":-9,\"s\":-5}', '{\"q\":15,\"r\":-9,\"s\":-6}', '{\"q\":15,\"r\":-8,\"s\":-7}', '{\"q\":14,\"r\":-7,\"s\":-7}', '{\"q\":14,\"r\":-6,\"s\":-8}', '{\"q\":13,\"r\":-5,\"s\":-8}', '{\"q\":13,\"r\":-4,\"s\":-9}', '{\"q\":12,\"r\":-3,\"s\":-9}', '{\"q\":12,\"r\":-2,\"s\":-10}', '{\"q\":11,\"r\":-1,\"s\":-10}', '{\"q\":11,\"r\":0,\"s\":-11}', '{\"q\":10,\"r\":1,\"s\":-11}', '{\"q\":10,\"r\":2,\"s\":-12}', '{\"q\":9,\"r\":3,\"s\":-12}', '{\"q\":9,\"r\":4,\"s\":-13}', '{\"q\":8,\"r\":5,\"s\":-13}', '{\"q\":8,\"r\":6,\"s\":-14}', '{\"q\":7,\"r\":7,\"s\":-14}', '{\"q\":7,\"r\":8,\"s\":-15}', '{\"q\":6,\"r\":9,\"s\":-15}', '{\"q\":5,\"r\":9,\"s\":-14}', '{\"q\":4,\"r\":9,\"s\":-13}', '{\"q\":3,\"r\":9,\"s\":-12}', '{\"q\":2,\"r\":9,\"s\":-11}', '{\"q\":1,\"r\":9,\"s\":-10}', '{\"q\":0,\"r\":9,\"s\":-9}', '{\"q\":-1,\"r\":9,\"s\":-8}', '{\"q\":-2,\"r\":9,\"s\":-7}', '{\"q\":-3,\"r\":9,\"s\":-6}', '{\"q\":-4,\"r\":9,\"s\":-5}', '{\"q\":-5,\"r\":9,\"s\":-4}', '{\"q\":-5,\"r\":8,\"s\":-3}', '{\"q\":-5,\"r\":7,\"s\":-2}', '{\"q\":-5,\"r\":6,\"s\":-1}', '{\"q\":-5,\"r\":5,\"s\":0}', '{\"q\":-4,\"r\":4,\"s\":0}', '{\"q\":-3,\"r\":3,\"s\":0}', '{\"q\":-2,\"r\":-1,\"s\":3}', '{\"q\":-2,\"r\":-2,\"s\":4}', '{\"q\":-4,\"r\":1,\"s\":3}', '{\"q\":-4,\"r\":2,\"s\":2}', '{\"q\":-5,\"r\":3,\"s\":2}', '{\"q\":-7,\"r\":4,\"s\":3}', '{\"q\":-6,\"r\":4,\"s\":2}', '{\"q\":-8,\"r\":4,\"s\":4}', '{\"q\":-9,\"r\":4,\"s\":5}', '{\"q\":-10,\"r\":4,\"s\":6}', '{\"q\":-11,\"r\":4,\"s\":7}', '{\"q\":-12,\"r\":4,\"s\":8}', '{\"q\":-12,\"r\":2,\"s\":10}', '{\"q\":-12,\"r\":3,\"s\":9}', '{\"q\":-13,\"r\":4,\"s\":9}', '{\"q\":-13,\"r\":5,\"s\":8}', '{\"q\":-14,\"r\":6,\"s\":8}', '{\"q\":-14,\"r\":7,\"s\":7}', '{\"q\":-15,\"r\":8,\"s\":7}', '{\"q\":-15,\"r\":9,\"s\":6}', '{\"q\":-14,\"r\":9,\"s\":5}', '{\"q\":-13,\"r\":9,\"s\":4}', '{\"q\":-12,\"r\":9,\"s\":3}', '{\"q\":-11,\"r\":9,\"s\":2}', '{\"q\":-10,\"r\":9,\"s\":1}', '{\"q\":-9,\"r\":9,\"s\":0}', '{\"q\":-8,\"r\":9,\"s\":-1}', '{\"q\":-7,\"r\":9,\"s\":-2}', '{\"q\":-6,\"r\":9,\"s\":-3}', '{\"q\":-11,\"r\":1,\"s\":10}', '{\"q\":-11,\"r\":0,\"s\":11}', '{\"q\":-10,\"r\":-1,\"s\":11}', '{\"q\":-10,\"r\":-2,\"s\":12}', '{\"q\":-9,\"r\":-3,\"s\":12}', '{\"q\":-9,\"r\":-4,\"s\":13}', '{\"q\":-8,\"r\":-5,\"s\":13}', '{\"q\":-8,\"r\":-6,\"s\":14}', '{\"q\":-7,\"r\":-7,\"s\":14}', '{\"q\":-7,\"r\":-8,\"s\":15}', '{\"q\":-6,\"r\":-9,\"s\":15}', '{\"q\":-5,\"r\":-9,\"s\":14}', '{\"q\":-4,\"r\":-9,\"s\":13}', '{\"q\":-3,\"r\":-9,\"s\":12}', '{\"q\":-2,\"r\":-9,\"s\":11}', '{\"q\":-1,\"r\":-9,\"s\":10}', '{\"q\":0,\"r\":-9,\"s\":9}', '{\"q\":1,\"r\":-9,\"s\":8}', '{\"q\":2,\"r\":-9,\"s\":7}', '{\"q\":3,\"r\":-9,\"s\":6}', '{\"q\":4,\"r\":-9,\"s\":5}', '{\"q\":-2,\"r\":-8,\"s\":10}', '{\"q\":-3,\"r\":-7,\"s\":10}', '{\"q\":-4,\"r\":-6,\"s\":10}', '{\"q\":-5,\"r\":-5,\"s\":10}', '{\"q\":-6,\"r\":-4,\"s\":10}', '{\"q\":-7,\"r\":-4,\"s\":11}', '{\"q\":-6,\"r\":-2,\"s\":8}', '{\"q\":-6,\"r\":-1,\"s\":7}', '{\"q\":-6,\"r\":0,\"s\":6}', '{\"q\":-6,\"r\":1,\"s\":5}', '{\"q\":7,\"r\":-2,\"s\":-5}', '{\"q\":8,\"r\":-2,\"s\":-6}', '{\"q\":9,\"r\":-3,\"s\":-6}', '{\"q\":10,\"r\":-3,\"s\":-7}', '{\"q\":4,\"r\":5,\"s\":-9}', '{\"q\":4,\"r\":6,\"s\":-10}', '{\"q\":5,\"r\":6,\"s\":-11}', '{\"q\":5,\"r\":7,\"s\":-12}']\r\n\r\n\r\nexport default class BFSExtra extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    //possibly but this.breadthFirstSearch = this.breadthfirstsearch.bind(this)\r\n\r\n    this.state = {\r\n      hexSize: 20,\r\n      //position of the very middle hexagon (changes the numbers seen in hexagons)\r\n      //decreasing y moves hexagon(0,0,0) upwards, increasing x moves hexagon(0,0,0) to the right\r\n      hexOrigin: { x: 400, y: 300 },\r\n      currentHex: {q: 0, r: 0, s: 0, x: 0, y: 0},\r\n      playerPosition: { q: 0, r: 0, s: 0 },\r\n      obstacles: DUMMY_OBSTACLES,\r\n      cameFrom: {},\r\n      hexPathMap: [],\r\n      path: []\r\n    }\r\n  }\r\n  componentWillMount(){\r\n    let hexParametres =  this.getHexParametres();\r\n    this.setState({\r\n      canvasSize: { canvasWidth: 800, canvasHeight: 600 },\r\n      hexParametres: hexParametres\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n    this.canvasHex.width = canvasWidth;\r\n    this.canvasHex.height = canvasHeight;\r\n    this.canvasInteraction.width = canvasWidth;\r\n    this.canvasInteraction.height = canvasHeight;\r\n    this.canvasView.width = canvasWidth;\r\n    this.canvasView.height = canvasHeight;\r\n    this.getCanvasPosition(this.canvasInteraction);\r\n    this.drawHex(this.canvasInteraction, this.Point(this.state.playerPosition.x, this.state.playerPosition.y), 1, \"black\", \"grey\", 0.2);\r\n    this.drawHexes();\r\n    this.drawObstacles();\r\n  }\r\n\r\nshouldComponentUpdate(nextProps, nextState) {\r\n  if(nextState.currentHex !== this.state.currentHex) {\r\n    const { q, r, s, x, y } = nextState.currentHex;\r\n    const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n    const ctx = this.canvasInteraction.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n    /*this.drawNeighbors(this.Hex(q, r, s));*/\r\n    this.drawPath();\r\n    return true;\r\n  }\r\n  if(nextState.cameFrom !== this.state.cameFrom) {\r\n    const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n    const ctx = this.canvasView.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n    for (let l in nextState.cameFrom) {\r\n      const { q, r, s } = JSON.parse(l);\r\n      const { x, y } = this.hexToPixel(this.Hex(q, r));\r\n      this.drawHex(this.canvasView, this.Point(x, y), 1, \"black\", \"grey\", 0.1);\r\n      var from = JSON.parse(nextState.cameFrom[l]);\r\n      var fromCoord = this.hexToPixel(this.Hex(from.q, from.r));\r\n      this.drawArrow(fromCoord.x, fromCoord.y, x, y);\r\n    }\r\n    return true;\r\n  }\r\n    return false;\r\n}\r\ndrawPath() {\r\n  let path = this.state.path;\r\n  for (let i = 0; i <= path.length - 1; i++) {\r\n    const {q,r} = JSON.parse(path[i]);\r\n    const {x,y} = this.hexToPixel(this.Hex(q,r));\r\n    this.drawHex(this.canvasInteraction, this.Point(x,y), 1, \"black\", \"#05b9f5\");\r\n  }\r\n}\r\ndrawObstacles() {\r\n  this.state.obstacles.map((l) => {\r\n    const {q,r,s} = JSON.parse(l);\r\n    const {x,y} = this.hexToPixel(this.Hex(q,r,s));\r\n    this.drawHex(this.canvasHex, this.Point(x,y), 1, \"black\", \"black\");\r\n  })\r\n}\r\ndrawArrow(fromx, fromy, tox, toy){\r\n    var ctx = this.canvasView.getContext(\"2d\");\r\n    var headlen = 5;\r\n    var angle = Math.atan2(toy-fromy,tox-fromx);\r\n    ctx.beginPath();\r\n    ctx.moveTo(fromx, fromy);\r\n    ctx.lineTo(tox, toy);\r\n    ctx.strokeStyle = \"#05b9f5\";\r\n    ctx.lineWidth = 3;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.moveTo(tox, toy);\r\n    ctx.globalAlpha = 0.3;\r\n    ctx.lineTo(tox-headlen*Math.cos(angle-Math.PI/7),toy-headlen*Math.sin(angle-Math.PI/7));\r\n    ctx.lineTo(tox-headlen*Math.cos(angle+Math.PI/7),toy-headlen*Math.sin(angle+Math.PI/7));\r\n    ctx.lineTo(tox, toy);\r\n    ctx.lineTo(tox-headlen*Math.cos(angle-Math.PI/7),toy-headlen*Math.sin(angle-Math.PI/7));\r\n    ctx.strokeStyle = \"#05b9f5\";\r\n    ctx.lineWidth = 5;\r\n    ctx.stroke();\r\n    ctx.fillStyle = \"#05b9f5\";\r\n    ctx.fill();\r\n}\r\n\r\n\r\n\r\n\r\n  drawNeighbors(h) {\r\n    for (let i = 0; i <= 5; i++) {\r\n      const { q, r, s} = this.getCubeNeighbor(this.Hex(h.q, h.r, h.s), i);\r\n      const { x, y } = this.hexToPixel(this.Hex(q, r, s));\r\n      this.drawHex(this.canvasInteraction, this.Point(x, y), \"black\", 2);\r\n    }\r\n  }\r\n\r\n\r\n  drawHexes() {\r\n    const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n  const { hexWidth, hexHeight, vertDist, horizDist } = this.state.hexParametres;\r\n  const hexOrigin = this.state.hexOrigin;\r\n  let qLeftSide = Math.round(hexOrigin.x/horizDist);\r\n  let qRightSide = Math.round((canvasWidth - hexOrigin.x)/horizDist);\r\n  let rTopSide = Math.round(hexOrigin.y/vertDist);\r\n  let rBottomSide = Math.round((canvasHeight - hexOrigin.y)/vertDist);\r\n  var hexPathMap = [];\r\n  var p = 0;\r\n  for (let r = 0; r <= rBottomSide; r++) {\r\n    if(r%2 == 0 && r !==0) {\r\n      p++;\r\n    }\r\n    for (let q = -qLeftSide; q <= qRightSide; q++) {\r\n        const { x, y } = this.hexToPixel(this.Hex(q-p, r));\r\n        if ((x >hexWidth/2 && x < canvasWidth - hexWidth/2) && (y > hexHeight/2 && y < canvasHeight - hexHeight/2)) {\r\n          //change background color\r\n          this.drawHex(this.canvasHex, this.Point(x,y), 1, \"black\", \"black\");\r\n          /*this.drawHexCoordinates(this.canvasHex, this.Point(x,y), this.Hex(q-p, r, -(q - p) - r));*/\r\n          var bottomH = JSON.stringify(this.Hex(q-p, r, -(q - p) - r));\r\n          if(!this.state.obstacles.includes(bottomH)) {\r\n            hexPathMap.push(bottomH);\r\n          }\r\n        }\r\n    }\r\n  }\r\nvar n = 0;\r\n  for (let r = -1; r >= -rTopSide; r--) {\r\n    if(r%2 !== 0) {\r\n      n++;\r\n    }\r\n    for (let q = -qLeftSide; q <= qRightSide; q++) {\r\n        const { x, y } = this.hexToPixel(this.Hex(q+n, r));\r\n        if ((x >hexWidth/2 && x < canvasWidth - hexWidth/2) && (y > hexHeight/2 && y < canvasHeight - hexHeight/2)) {\r\n            //change background color\r\n        this.drawHex(this.canvasHex, this.Point(x,y), 1, \"black\", \"black\");\r\n        /*this.drawHexCoordinates(this.canvasHex, this.Point(x,y), this.Hex(q+n, r, - (q + n) - r));*/\r\n        var topH = JSON.stringify(this.Hex(q+n, r, - (q + n) - r));\r\n        if(!this.state.obstacles.includes(topH)) {\r\n          hexPathMap.push(topH);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  hexPathMap = [].concat(hexPathMap);\r\n  this.setState(\r\n    {hexPathMap: hexPathMap},\r\n    this.breadthFirstSearchCallback = () => this.breadthFirstSearch(this.state.playerPosition)\r\n  )\r\n  }\r\n\r\n  //builds the individual hex shape\r\n  drawHex(canvasID, center, lineWidth, lineColor, fillColor) {\r\n  for (let i = 0; i <= 5; i++) {\r\n    let start = this.getHexCornerCoord(center, i);\r\n    let end = this.getHexCornerCoord(center, i + 1);\r\n    this.fillHex(canvasID, center, fillColor);\r\n    this.drawLine(canvasID, start, end, lineWidth, lineColor);\r\n  }\r\n}\r\n\r\n  //get the coordinates of the corner to draw the hex\r\n  getHexCornerCoord(center, i) {\r\n   let angle_deg = 60 * i   + 30;\r\n   let angle_rad = Math.PI / 180 * angle_deg;\r\n   let x = center.x + this.state.hexSize * Math.cos(angle_rad);\r\n  let y = center.y + this.state.hexSize * Math.sin(angle_rad);\r\n  return this.Point(x, y);\r\n }\r\n\r\n getHexParametres() {\r\n  let hexHeight = this.state.hexSize * 2;\r\n  let hexWidth = Math.sqrt(3)/2 * hexHeight;\r\n  let vertDist = hexHeight * 3/4;\r\n  let horizDist = hexWidth;\r\n  return { hexWidth, hexHeight, vertDist, horizDist }\r\n}\r\n\r\ngetCanvasPosition(canvasID) {\r\n  let rect = canvasID.getBoundingClientRect();\r\n  this.setState({\r\n    canvasPosition: { left:rect.left, right: rect.right, top: rect.top, bottom: rect.bottom }\r\n  })\r\n}\r\n   hexToPixel(h) {\r\n     let hexOrigin = this.state.hexOrigin;\r\n     let x = this.state.hexSize * Math.sqrt(3) * (h.q + h.r/2) + hexOrigin.x;\r\n     let y = this.state.hexSize * 3/2 * h.r + hexOrigin.y;\r\n     return this.Point(x, y)\r\n   }\r\n   pixelToHex(p) {\r\n     let size = this.state.hexSize;\r\n     let origin = this.state.hexOrigin;\r\n     let q = ((p.x - origin.x) * Math.sqrt(3)/3 - (p.y - origin.y) / 3) / size\r\n     let r = (p.y - origin.y) * 2/3 / size\r\n     return this.Hex(q, r, - q - r);\r\n   }\r\ncubeDirection(direction) {\r\n  const cubeDirections = [this.Hex(1, 0, -1), this.Hex(1, -1, 0), this.Hex(0, -1, 1),\r\n                          this.Hex(-1, 0, 1), this.Hex(-1, 1, 0), this.Hex(0, 1, -1)];\r\nreturn cubeDirections[direction];\r\n}\r\ncubeAdd(a, b) {\r\n  return this.Hex(a.q + b.q, a.r + b.r, a.s + b.s);\r\n}\r\ncubeSubstract(hexA, hexB) {\r\n  return this.Hex(hexA.q - hexB.q, hexA.r - hexB.r, hexA.s - hexB.s);\r\n}\r\ngetCubeNeighbor(h, direction) {\r\n  return this.cubeAdd(h, this.cubeDirection(direction));\r\n}\r\ngetNeighbors(h) {\r\n  var arr = [];\r\n  for (let i = 0; i <= 5; i++) {\r\n    const { q, r, s } = this.getCubeNeighbor(this.Hex(h.q, h.r, h.s), i);\r\n    arr.push(this.Hex(q, r, s));\r\n  }\r\n  return arr;\r\n}\r\n   cubeRound(cube) {\r\n     var rx = Math.round(cube.q)\r\n     var ry = Math.round(cube.r)\r\n     var rz = Math.round(cube.s)\r\n     var x_diff = Math.abs(rx - cube.q)\r\n     var y_diff = Math.abs(ry - cube.r)\r\n     var z_diff = Math.abs(rz - cube.s)\r\n     if (x_diff > y_diff && x_diff > z_diff) {\r\n       rx = -ry-rz;\r\n     } else if (y_diff > z_diff) {\r\n          ry = -rx-rz\r\n     } else {\r\n          rz = -rx-ry\r\n     }\r\n     return this.Hex(rx, ry, rz)\r\n   }\r\ngetDistanceLine(hexA, hexB) {\r\n  let dist = this.cubeDistance(hexA, hexB);\r\n  var arr = [];\r\n  for (let i = 0; i <= dist; i++) {\r\n  let center = this.hexToPixel(this.cubeRound(this.cubeLinearInt(hexA, hexB, 1.0 / dist * i)));\r\n  arr = [].concat(arr, center);\r\n  }\r\n  this.setState({\r\n    currentDistanceLine: arr\r\n  })\r\n}\r\ncubeDistance(hexA, hexB) {\r\n  const { q, r, s } = this.cubeSubstract(hexA, hexB);\r\n  return (Math.abs(q) + Math.abs(r) + Math.abs(s)) / 2;\r\n}\r\ncubeLinearInt(hexA, hexB, t) {\r\n  return this.Hex(this.linearInt(hexA.q, hexB.q, t), this.linearInt(hexA.r, hexB.r, t), this.linearInt(hexA.s, hexB.s, t));\r\n}\r\nlinearInt(a, b, t) {\r\n    return (a + (b - a) * t)\r\n}\r\nPoint(x, y) {\r\n     return {x: x, y: y}\r\n   }\r\n   Hex(q, r, s) {\r\n     return {q: q, r: r, s: s}\r\n   }\r\n   drawLine(canvasID, start, end, lineWidth, lineColor) {\r\n     const ctx = canvasID.getContext(\"2d\");\r\n     ctx.beginPath();\r\n     ctx.moveTo(start.x, start.y);\r\n     ctx.strokeStyle = lineColor;\r\n     ctx.lineWidth = lineWidth;\r\n     ctx.lineTo(end.x, end.y);\r\n     ctx.stroke();\r\n     ctx.closePath();\r\n   }\r\n\r\n   fillHex(canvasID, center, fillColor) {\r\n     let c0 = this.getHexCornerCoord(center, 0);\r\n     let c1 = this.getHexCornerCoord(center, 1);\r\n     let c2 = this.getHexCornerCoord(center, 2);\r\n     let c3 = this.getHexCornerCoord(center, 3);\r\n     let c4 = this.getHexCornerCoord(center, 4);\r\n     let c5 = this.getHexCornerCoord(center, 5);\r\n     const ctx = canvasID. getContext(\"2d\");\r\n     ctx.beginPath();\r\n     ctx.fillStyle = fillColor;\r\n     ctx.globalAlpha = 0.1;\r\n     ctx.moveTo(c0.x, c0.y);\r\n     ctx.lineTo(c1.x, c1.y);\r\n     ctx.lineTo(c2.x, c2.y);\r\n     ctx.lineTo(c3.x, c3.y);\r\n     ctx.lineTo(c4.x, c4.y);\r\n     ctx.lineTo(c5.x, c5.y);\r\n     ctx.closePath();\r\n     ctx.fill();\r\n   }\r\n   drawHexCoordinates(canvasID, center, h) {\r\n     const ctx = canvasID.getContext(\"2d\");\r\n     ctx.fillText(h.q, center.x+6, center.y);\r\n     ctx.fillText(h.r, center.x-3, center.y+15);\r\n     ctx.fillText(h.s, center.x-12, center.y);\r\n   }\r\n\r\n\r\nhandleMouseMove(e) {\r\n     const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n     const { hexWidth, hexHeight, vertDist, horizDist } = this.state.hexParametres;\r\n     const { left, right, top, bottom } = this.state.canvasPosition;\r\n     var canvasPos = document.getElementById(\"canv7\");\r\n     let rect = canvasPos.getBoundingClientRect();\r\n     let offsetX = e.pageX - rect.left;\r\n     let offsetY = (e.pageY - (window.pageYOffset + rect.top));\r\n     const { q, r, s } = this.cubeRound(this.pixelToHex(this.Point(offsetX, offsetY)));\r\n     const { x, y } = this.hexToPixel(this.Hex(q, r, s));\r\n     let playerPosition = this.state.playerPosition;\r\n     this.getDistanceLine(this.Hex(0,0,0), this.Hex(q,r,s));\r\n     /*this.getDistanceLine(this.Hex(0,0,0), this.Hex(q,r,s));*/\r\n     this.getPath(this.Hex(playerPosition.q, playerPosition.r, playerPosition.s), this.Hex(q,r,s));\r\n      if ((x >hexWidth/2 && x < canvasWidth - hexWidth/2) && (y > hexHeight/2 && y < canvasHeight - hexHeight/2)) {\r\nthis.setState({\r\n  currentHex: {q, r, s, x, y}\r\n})\r\n}\r\n   }\r\n\r\n   getPath(start, current) {\r\n  const { cameFrom } = this.state;\r\n  start = JSON.stringify(start);\r\n  current = JSON.stringify(current);\r\n  if(cameFrom[current] != undefined) {\r\n    var path = [current];\r\n    while (current != start) {\r\n      current = cameFrom[current];\r\n      path.push(current);\r\n    }\r\n    path = [].concat(path);\r\n    this.setState({\r\n      path: path\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nhandleClick() {\r\n\r\nconst { currentHex, cameFrom } = this.state;\r\nconst { q,r,s } = currentHex;\r\nif(cameFrom[JSON.stringify(this.Hex(q,r,s))]) {\r\n  this.setState(\r\n    {playerPosition: this.Hex(q,r,s)},\r\n    this.breadthFirstSearchCallback = () => this.breadthFirstSearch(this.state.playerPosition)\r\n  )\r\n}\r\n   }\r\n\r\n\r\n\r\nbreadthFirstSearch(playerPosition) {\r\nvar frontier = [playerPosition];\r\nvar cameFrom = {};\r\ncameFrom[JSON.stringify(playerPosition)] = JSON.stringify(playerPosition);\r\nwhile (frontier.length != 0) {\r\n  var current = frontier.shift();\r\n  let arr = this.getNeighbors(current);\r\n  arr.map((l) => {\r\n\r\n    if(!cameFrom.hasOwnProperty(JSON.stringify(l)) && this.state.hexPathMap.includes(JSON.stringify(l))) {\r\n      frontier.push(l);\r\n      cameFrom[JSON.stringify(l)] = JSON.stringify(current);\r\n    }\r\n  })\r\n\r\n}\r\ncameFrom = Object.assign({}, cameFrom);\r\nthis.setState({\r\n  cameFrom: cameFrom\r\n})\r\n}\r\n\r\n\r\n\r\n  resetSketch() {\r\n  window.location.reload();\r\n  }\r\n\r\n\r\nrender() {\r\n    return (\r\n      <div className=\"BFSExtra\">\r\n        <div className=\"title2\">\r\n        Breadth First Search\r\n        </div>\r\n        <div className=\"description2\">\r\n          <b id=\"bold\">How to use: </b>Click different areas of the board to see how BFS algorithm finds the shortest path!<br></br>\r\n\r\n          <b id=\"bold\">How it works:</b><br></br>\r\n        The shortest path is being calculated live by giving a distance value to every<br></br>\r\n        node on the board. The red arrows indicate the path that the algorithm is taking<br></br>\r\n        from node to node.<br></br>\r\n      *View the second board below to see how the shortest path is determined step by step.\r\n        </div>\r\n        <canvas id=\"canv8\" ref={canvasHex => this.canvasHex = canvasHex }> </canvas>\r\n        <canvas id=\"canv7\" ref={canvasCoordinates => this.canvasCoordinates = canvasCoordinates }> </canvas>\r\n        <canvas id=\"canv6\" ref={canvasView => this.canvasView = canvasView }> </canvas>\r\n        <canvas id=\"canv5\" ref={canvasInteraction => this.canvasInteraction = canvasInteraction} onMouseMove = {this.handleMouseMove} onClick={this.handleClick}> </canvas>\r\n\r\n    </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PathfindingVisualizer from './PathfindingVisualizer/PathfindingVisualizer';\nimport HomeScreen from './HomeScreen/HomeScreen';\nimport NavBar from './NavBar/NavBar';\nimport P5Wrapper from 'react-p5-wrapper';\nimport BSort from './BSort/BSort';\nimport BreadthFirstSearch from './BreadthFirstSearch/BreadthFirstSearch';\nimport QSort from './QSort/QSort';\nimport BFSExtra from './BFSExtra/BFSExtra';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n       <HomeScreen></HomeScreen>\n       <NavBar></NavBar>\n       <PathfindingVisualizer></PathfindingVisualizer>\n       <BFSExtra></BFSExtra>\n      <BreadthFirstSearch></BreadthFirstSearch>\n      <BSort></BSort>\n      <QSort></QSort>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}